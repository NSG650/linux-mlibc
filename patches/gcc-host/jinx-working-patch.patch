diff --git gcc-host-clean/gcc/config/linux.h gcc-host-workdir/gcc/config/linux.h
index 74f7079..524f3b5 100644
--- gcc-host-clean/gcc/config/linux.h
+++ gcc-host-workdir/gcc/config/linux.h
@@ -34,18 +34,21 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define OPTION_BIONIC_P(opts)	(DEFAULT_LIBC == LIBC_BIONIC)
 #undef OPTION_MUSL_P
 #define OPTION_MUSL_P(opts)	(DEFAULT_LIBC == LIBC_MUSL)
+#define OPTION_MLIBC_P(opts)	(DEFAULT_LIBC == LIBC_MLIBC)
 #else
 #define OPTION_GLIBC_P(opts)	((opts)->x_linux_libc == LIBC_GLIBC)
 #define OPTION_UCLIBC_P(opts)	((opts)->x_linux_libc == LIBC_UCLIBC)
 #define OPTION_BIONIC_P(opts)	((opts)->x_linux_libc == LIBC_BIONIC)
 #undef OPTION_MUSL_P
 #define OPTION_MUSL_P(opts)	((opts)->x_linux_libc == LIBC_MUSL)
+#define OPTION_MLIBC_P(opts)	((opts)->x_linux_libc == LIBC_MLIBC)
 #endif
 #define OPTION_GLIBC		OPTION_GLIBC_P (&global_options)
 #define OPTION_UCLIBC		OPTION_UCLIBC_P (&global_options)
 #define OPTION_BIONIC		OPTION_BIONIC_P (&global_options)
 #undef OPTION_MUSL
 #define OPTION_MUSL		OPTION_MUSL_P (&global_options)
+#define OPTION_MLIBC		OPTION_MLIBC_P (&global_options)
 
 #define GNU_USER_TARGET_OS_CPP_BUILTINS()			\
     do {							\
@@ -69,6 +72,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 	  builtin_version ("CRuntime_Bionic");			\
 	else if (OPTION_MUSL)					\
 	  builtin_version ("CRuntime_Musl");			\
+	else if (OPTION_MLIBC)					\
+	  builtin_version ("CRuntime_Mlibc");			\
     } while (0)
 
 /* Determine which dynamic linker to use depending on whether GLIBC or
@@ -76,21 +81,24 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
    -muclibc or -mglibc or -mbionic or -mmusl has been passed to change
    the default.  */
 
-#define CHOOSE_DYNAMIC_LINKER1(LIBC1, LIBC2, LIBC3, LIBC4, LD1, LD2, LD3, LD4)	\
-  "%{" LIBC2 ":" LD2 ";:%{" LIBC3 ":" LD3 ";:%{" LIBC4 ":" LD4 ";:" LD1 "}}}"
+#define CHOOSE_DYNAMIC_LINKER1(LIBC1, LIBC2, LIBC3, LIBC4, LIBC5, LD1, LD2, LD3, LD4, LD5)	\
+  "%{" LIBC2 ":" LD2 ";:%{" LIBC3 ":" LD3 ";:%{" LIBC4 ":" LD4 ";:%{" LIBC5 ":" LD5 ";:" LD1 "}}}}"
 
 #if DEFAULT_LIBC == LIBC_GLIBC
-#define CHOOSE_DYNAMIC_LINKER(G, U, B, M) \
-  CHOOSE_DYNAMIC_LINKER1 ("mglibc", "muclibc", "mbionic", "mmusl", G, U, B, M)
+#define CHOOSE_DYNAMIC_LINKER(G, U, B, MU, ML) \
+  CHOOSE_DYNAMIC_LINKER1 ("mglibc", "muclibc", "mbionic", "mmusl", "mmlibc", G, U, B, MU, ML)
 #elif DEFAULT_LIBC == LIBC_UCLIBC
-#define CHOOSE_DYNAMIC_LINKER(G, U, B, M) \
-  CHOOSE_DYNAMIC_LINKER1 ("muclibc", "mglibc", "mbionic", "mmusl", U, G, B, M)
+#define CHOOSE_DYNAMIC_LINKER(G, U, B, MU, ML) \
+  CHOOSE_DYNAMIC_LINKER1 ("muclibc", "mglibc", "mbionic", "mmusl", "mmlibc", U, G, B, MU, ML)
 #elif DEFAULT_LIBC == LIBC_BIONIC
-#define CHOOSE_DYNAMIC_LINKER(G, U, B, M) \
-  CHOOSE_DYNAMIC_LINKER1 ("mbionic", "mglibc", "muclibc", "mmusl", B, G, U, M)
+#define CHOOSE_DYNAMIC_LINKER(G, U, B, MU, ML) \
+  CHOOSE_DYNAMIC_LINKER1 ("mbionic", "mglibc", "muclibc", "mmusl", "mmlibc", B, G, U, MU, ML)
 #elif DEFAULT_LIBC == LIBC_MUSL
-#define CHOOSE_DYNAMIC_LINKER(G, U, B, M) \
-  CHOOSE_DYNAMIC_LINKER1 ("mmusl", "mglibc", "muclibc", "mbionic", M, G, U, B)
+#define CHOOSE_DYNAMIC_LINKER(G, U, B, MU, ML) \
+  CHOOSE_DYNAMIC_LINKER1 ("mmusl", "mglibc", "muclibc", "mbionic", "mmlibc", MU, G, U, B, ML)
+#elif DEFAULT_LIBC == LIBC_MLIBC
+#define CHOOSE_DYNAMIC_LINKER(G, U, B, MU, ML) \
+  CHOOSE_DYNAMIC_LINKER1 ("mmlibc", "mglibc", "muclibc", "mbionic", "mmusl", ML, G, U, B, MU)
 #else
 #error "Unsupported DEFAULT_LIBC"
 #endif /* DEFAULT_LIBC */
@@ -113,18 +121,23 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
 #define MUSL_DYNAMIC_LINKER64 "/dev/null"
 #define MUSL_DYNAMIC_LINKERX32 "/dev/null"
 
+#define MLIBC_DYNAMIC_LINKER "/usr/lib/ld.so"
+#define MLIBC_DYNAMIC_LINKER32 "/usr/lib/ld_i386.so"
+#define MLIBC_DYNAMIC_LINKER64 "/usr/lib/ld.so"
+#define MLIBC_DYNAMIC_LINKERX32 "/usr/lib/ld32.so"
+
 #define GNU_USER_DYNAMIC_LINKER						\
   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER, UCLIBC_DYNAMIC_LINKER,	\
-			 BIONIC_DYNAMIC_LINKER, MUSL_DYNAMIC_LINKER)
+			 BIONIC_DYNAMIC_LINKER, MUSL_DYNAMIC_LINKER, MLIBC_DYNAMIC_LINKER)
 #define GNU_USER_DYNAMIC_LINKER32					\
   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER32, UCLIBC_DYNAMIC_LINKER32, \
-			 BIONIC_DYNAMIC_LINKER32, MUSL_DYNAMIC_LINKER32)
+			 BIONIC_DYNAMIC_LINKER32, MUSL_DYNAMIC_LINKER32, MLIBC_DYNAMIC_LINKER32)
 #define GNU_USER_DYNAMIC_LINKER64					\
   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKER64, UCLIBC_DYNAMIC_LINKER64, \
-			 BIONIC_DYNAMIC_LINKER64, MUSL_DYNAMIC_LINKER64)
+			 BIONIC_DYNAMIC_LINKER64, MUSL_DYNAMIC_LINKER64, MLIBC_DYNAMIC_LINKER64)
 #define GNU_USER_DYNAMIC_LINKERX32					\
   CHOOSE_DYNAMIC_LINKER (GLIBC_DYNAMIC_LINKERX32, UCLIBC_DYNAMIC_LINKERX32, \
-			 BIONIC_DYNAMIC_LINKERX32, MUSL_DYNAMIC_LINKERX32)
+			 BIONIC_DYNAMIC_LINKERX32, MUSL_DYNAMIC_LINKERX32, MLIBC_DYNAMIC_LINKERX32)
 
 /* Whether we have Bionic libc runtime */
 #undef TARGET_HAS_BIONIC
diff --git gcc-host-clean/gcc/config.gcc gcc-host-workdir/gcc/config.gcc
index c5064dd..54b852a 100644
--- gcc-host-clean/gcc/config.gcc
+++ gcc-host-workdir/gcc/config.gcc
@@ -646,7 +646,7 @@ case ${target} in
 esac
 
 # Common C libraries.
-tm_defines="$tm_defines LIBC_GLIBC=1 LIBC_UCLIBC=2 LIBC_BIONIC=3 LIBC_MUSL=4"
+tm_defines="$tm_defines LIBC_GLIBC=1 LIBC_UCLIBC=2 LIBC_BIONIC=3 LIBC_MUSL=4 LIBC_MLIBC=5"
 
 # 32-bit x86 processors supported by --with-arch=.  Each processor
 # MUST be separated by exactly one space.
@@ -862,6 +862,9 @@ case ${target} in
     *-*-*musl*)
       tm_defines="$tm_defines DEFAULT_LIBC=LIBC_MUSL"
       ;;
+    *-*-*mlibc*)
+      tm_defines="$tm_defines DEFAULT_LIBC=LIBC_MLIBC"
+      ;;
     *)
       tm_defines="$tm_defines DEFAULT_LIBC=LIBC_GLIBC"
       ;;
diff --git gcc-host-clean/libgcc/configure.ac gcc-host-workdir/libgcc/configure.ac
index 2fc9d5d..83d246e 100644
--- gcc-host-clean/libgcc/configure.ac
+++ gcc-host-workdir/libgcc/configure.ac
@@ -46,7 +46,7 @@ else
   libgcc_topdir="${srcdir}/.."
 fi
 AC_SUBST(libgcc_topdir)
-AC_CONFIG_AUX_DIR($libgcc_topdir)
+AC_CONFIG_AUX_DIR([.])
 AC_CONFIG_HEADER(auto-target.h:config.in)
 
 AC_ARG_ENABLE(shared,
diff --git gcc-host-clean/libiberty/configure.ac gcc-host-workdir/libiberty/configure.ac
index 84a7b37..24ddb33 100644
--- gcc-host-clean/libiberty/configure.ac
+++ gcc-host-workdir/libiberty/configure.ac
@@ -36,7 +36,7 @@ else
   libiberty_topdir="${srcdir}/.."
 fi
 AC_SUBST(libiberty_topdir)
-AC_CONFIG_AUX_DIR($libiberty_topdir)
+AC_CONFIG_AUX_DIR([.])
 
 dnl Very limited version of automake's enable-maintainer-mode
 
diff --git gcc-host-clean/libstdc++-v3/configure.host gcc-host-workdir/libstdc++-v3/configure.host
index ec32980..1fe59f3 100644
--- gcc-host-clean/libstdc++-v3/configure.host
+++ gcc-host-workdir/libstdc++-v3/configure.host
@@ -255,7 +255,7 @@ case "${host_os}" in
   freebsd*)
     os_include_dir="os/bsd/freebsd"
     ;;
-  linux-musl*)
+  linux-musl* | linux-mlibc*)
     os_include_dir="os/generic"
     ;;
   gnu* | linux* | kfreebsd*-gnu | uclinux*)
